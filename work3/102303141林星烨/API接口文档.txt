Todo List API 接口文档
1. 获取所有待办事项
URL: /search/all/not_completed
请求方法: GET
参数:
返回结果:
json
{
	code:200,
	msg="success",
	data=[{事项}]
}

2. 获取所有已完成事项（分页）
URL:/search/all/completed
请求方法:GET

返回结果:
json
{
 	code:200,
	msg="search success",
	data=[{事项}]
}

3. 获取特定ID的事项
URL:/search/by_id/<int:todo_id>
请求方法: GET
返回结果:
json
{
 	code:200,
	msg="search success",
	data=[{事项}]
}

4. 添加新的待办事项
URL: /add_todo
请求方法: POST

5. 将一条待办事项设置为已完成
URL:/update/<int:todo_id>
请求方法: POST
返回结果:
json
{
	code:200,
	msg:'update single success'
}

6. 将一条已完成事项设置为待办
URL: /update2/<int:todo_id>
请求方法: POST
返回结果:
json
{
	code:200,
 	msg:'update single success'
}

7. 将所有待办事项设置为已完成
URL: /update/all
请求方法: POST
返回结果:
json
{
	code:200,
 	msg:'update all success'
}

8. 将所有已完成事项设置为待办
URL: /update2/all
请求方法: POST
返回结果:
json
{
	code:200,
 	msg:'update all success'
}
9. 删除特定ID的事项
URL: /delete/single_completed/<int:todo_id>
请求方法: DELETE
返回结果:
json
{
	code:200,
 	msg:'delete single success'
}

12. 删除所有已完成事项
URL:/delete/all_completed
请求方法: DELETE
返回结果:
json
{
	code:200,
 	msg:'delete all completed success'
}

13. 删除所有待办事项
URL: /delete/all_not_completed
请求方法: DELETE
返回结果:
json
{
	code:200,
 	msg:'delete all not completed success'
}


14. 删除所有事项
URL: /delete/all
请求方法: DELETE
返回结果:
json
{
	code:200,
 	msg:'delete all success'
}

所有API返回的数据均为JSON格式。